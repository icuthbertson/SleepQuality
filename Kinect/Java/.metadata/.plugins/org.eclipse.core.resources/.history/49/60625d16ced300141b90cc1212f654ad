import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.Socket;

public class ServerComms {
	
	private static BufferedWriter w;
	private static Socket c;
	
	   public static void main(String[] args) {
	      try {
	         c = new Socket("46.101.61.151",2000);
	         printSocketInfo(c);
	         
	         w = new BufferedWriter(new OutputStreamWriter(
	            c.getOutputStream()));
	         
	         BufferedReader loggedIn = new BufferedReader(new InputStreamReader(c.getInputStream()));
	         
	         w.write("LOGIN,p1,byebye,");
	         w.newLine();
	         w.flush();
	         
	         String s = null;
	         while(s == null) {
	        	 s = loggedIn.readLine();
	         }
	         
	         if (s.equals("LOGGED IN"))
	         
	         System.out.println("slkdjfha vnlktyeokfjgagtjlkea klrealjskdlkgsed aefjh");

	         sendData();
	         
	         w.write("LOGOUT");
	         w.flush();
	         
	         w.close();
	         
	         c.close();
	         
	      } catch (IOException e) {
	         System.err.println(e.toString());
	         
	      } 
	      finally {
	    	  try {
				w.write("LOGOUT");
				c.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	      }
	   }
	   
	   private static void sendData() throws IOException {
		   BufferedReader r = new BufferedReader(new FileReader("H:/Sleep Quality Repo/Kinect/Java/Java Comms/data/move03-06-15.txt"));
		   
		   String m = null;

		   while ((m=r.readLine())!= null) {
	            System.out.println(m);
	            w.write(m);
	            w.newLine();
	            w.flush();
	         }
		   
		   r.close();
	   }
	   
	   private static void printSocketInfo(Socket s) {
	      System.out.println("Remote address = "
	         +s.getInetAddress().toString());
	      System.out.println("Remote port = "
	         +s.getPort());
	      System.out.println("Local socket address = "
	         +s.getLocalSocketAddress().toString());
	      System.out.println("Local address = "
	         +s.getLocalAddress().toString());
	      System.out.println("Local port = "
	         +s.getLocalPort());
	   }
	}